{"version":3,"sources":["components/HomePage.js","components/AboutMe.js","components/ContactMe.js","components/Projects.js","components/MainRouter.js","App.js","serviceWorker.js","index.js","components/imagesEmoji/goodNight.jpeg","components/imagesEmoji/meditation.jpeg","components/imagesEmoji/goodMorning.jpeg","components/imagesEmoji/goodAfternoon.jpeg","components/imagesEmoji/goodEvening.jpeg"],"names":["HomePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentTime","emojiImage","meditation","setState","Date","getHours","morning","afternoon","evening","night","react_default","a","createElement","className","src","alt","Component","AboutMe","ContactMe","Project","lib","shadow","style","width","marginTop","height","margin","expand","color","background","border","colored","ripple","name","onClick","console","log","MainRouter","react_router","exact","path","component","Projects","App","fixedDrawer","title","react_router_dom","to","components_MainRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.440c41b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './componentCSS/HomePage.css';\r\nimport meditation from './imagesEmoji/meditation.jpeg';\r\nimport morning from './imagesEmoji/goodMorning.jpeg';\r\nimport afternoon from './imagesEmoji/goodAfternoon.jpeg';\r\nimport evening from './imagesEmoji/goodEvening.jpeg';\r\nimport night from './imagesEmoji/goodNight.jpeg';\r\n\r\nexport default class HomePage extends Component {\r\n  componentWillMount(){\r\n    this.setState({\r\n      currentTime: new Date().getHours()\r\n    })\r\n\r\n  }\r\n    componentDidMount(){\r\n     if(this.state.currentTime >= 5 && this.state.currentTime < 12){\r\n       this.setState({\r\n         emojiImage: morning\r\n       })\r\n     }\r\n     else if(this.state.currentTime > 11  && this.state.currentTime < 17 ){\r\n      this.setState({\r\n        emojiImage: afternoon\r\n      })\r\n    }\r\n    else if(this.state.currentTime > 16 && this.state.currentTime < 20){\r\n      this.setState({\r\n        emojiImage: evening\r\n      })\r\n    }\r\n    else if(this.state.currentTime > 19 && this.state.currentTime < 25){\r\n      this.setState({\r\n        emojiImage: night\r\n      })\r\n    }\r\n    else if(this.state.currentTime >= 0 && this.state.currentTime < 5){\r\n      this.setState({\r\n        emojiImage: night\r\n      })\r\n    }\r\n    }\r\n    constructor(props){\r\n      super(props);\r\n      this.state=({\r\n        currentTime: 25,\r\n        emojiImage: meditation,\r\n      })\r\n    }\r\n  render() {\r\n    return (\r\n        <div className=\"emojiHello\">\r\n        <img src={this.state.emojiImage} alt=\"Akhil Nayak\"  />\r\n        <h1>Hi, I'm Akhil Nayak </h1> \r\n        <h1 className=\"profession\" >Front-End Developer</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>hello</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ContactMe extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Card, CardActions, CardText, CardTitle, Button, CardMenu, IconButton} from 'react-mdl'\r\n\r\nexport default class Project extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card shadow={0} style={{width: '320px', marginTop: '10%' , height: '320px', margin: 'auto'}}>\r\n    <CardTitle expand style={{color: '#fff', background: 'url(http://www.getmdl.io/assets/demos/dog.png) bottom right 15% no-repeat #46B6AC'}}>Update</CardTitle>\r\n    <CardText>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n        Aenan convallis.\r\n    </CardText>\r\n    <CardActions border>\r\n        <Button colored>View Updates</Button>\r\n    </CardActions>\r\n    <CardMenu style={{color: '#fff'}}>\r\n        <IconButton ripple name=\"share\" onClick ={()=>console.log(\"pressed\")} />\r\n    </CardMenu>\r\n</Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport HomePage from './HomePage';\r\nimport AboutMe from './AboutMe';\r\nimport ContactMe from './ContactMe';\r\nimport Projects from './Projects'\r\n\r\nconst MainRouter = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component = {HomePage} />\r\n        <Route exact path=\"/aboutMe\" component = {AboutMe} />\r\n        <Route exact path=\"/projects\" component = {Projects} />\r\n        <Route exact path=\"/contactMe\" component = {ContactMe} />\r\n    </Switch>\r\n)\r\n\r\nexport default MainRouter;","import React from 'react';\nimport './App.css';\nimport { Layout, Drawer, Navigation, Content } from 'react-mdl';\nimport MainRouter from './components/MainRouter';\nimport {Link} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n    <Layout className=\"bgImage\" fixedDrawer>\n        <Drawer className=\"drawer\" title=\"Portfolio\">\n            <Navigation className=\"navLink\">\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/aboutMe\">About Me</Link>\n                <Link to=\"/contactMe\">Contact Me</Link>\n            </Navigation>\n        </Drawer>\n        <Content className=\"emojiHello\">\n          <MainRouter />\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/goodNight.fb889a5d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/meditation.b64484c9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/goodMorning.be89a9c1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/goodAfternoon.e444ced7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/goodEvening.ae1c0a0b.jpeg\";"],"sourceRoot":""}